{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOVgZr22v+uDWJcaRoVOKti"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"deEBhBY5zxNo"},"outputs":[],"source":["import numpy as np\n","import scipy as sc\n","import matplotlib.pyplot as plt\n","\n","from sklearn.datasets import make_circles\n"]},{"cell_type":"code","source":["# CREAR EL DATASET\n","n=500\n","p=2\n","X,Y = make_circles(n_samples=n, factor=0.5, noise=0.05)\n","plt.scatter(X[Y==0,0], X[Y==0, 1], c=\"skyblue\")\n","plt.scatter(X[Y==1,0], X[Y==1, 1], c=\"salmon\")\n","plt.axis(\"equal\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"dyx23lQi2MjV","executionInfo":{"status":"ok","timestamp":1659660314387,"user_tz":300,"elapsed":11,"user":{"displayName":"CAMILO ANDRES LOPEZ SARMIENTO","userId":"14537470450628573491"}},"outputId":"85b31b66-866b-4855-8e9b-0bdfaa5b4f68"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["class neural_layer():\n","\n","  def __init__(self, n_conn, n_neur, act_f):\n","    self.act_f =act_f\n","    self.b = np.random.rand(1, n_neur) * 2 - 1\n","    self.W = np.random.rand(n_conn, n_neur) *2 - 1\n"],"metadata":{"id":"Uv94waH83WjY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# FUNCIONES DE ACTIVACIÓN\n","\n","sigm = (lambda x: 1/(1 + np.e **(-x)),\n","       lambda x: x* (1 - x)) \n","\n","relu= lambda x: np.maximum(0,x)\n","\n","_x = np.linspace(-5,5,100)\n","plt.plot(_x, relu(_x))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"2jIfPz4X4Alc","executionInfo":{"status":"ok","timestamp":1659660314669,"user_tz":300,"elapsed":9,"user":{"displayName":"CAMILO ANDRES LOPEZ SARMIENTO","userId":"14537470450628573491"}},"outputId":"c63ba196-b452-432d-90ef-2e94232cb7fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f23fd974e90>]"]},"metadata":{},"execution_count":5},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["l0 = neural_layer(p, 4, sigm)\n","l1 = neural_layer(4, 8, sigm)\n","#...\n","\n","def create_nn(topology, act_f):\n","  nn = []\n","  for l, layer in enumerate(topology[:-1]):\n","    nn.append(neural_layer(topology[1], topology[l+1], act_f))\n","  return nn\n","\n","topology =[p, 4, 8, 16, 8, 4, 1]\n","create_nn(topology,sigm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HUUKLkqg4Auz","executionInfo":{"status":"ok","timestamp":1659660314670,"user_tz":300,"elapsed":7,"user":{"displayName":"CAMILO ANDRES LOPEZ SARMIENTO","userId":"14537470450628573491"}},"outputId":"18271249-0428-476c-fe51-52c6c9479702"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<__main__.neural_layer at 0x7f23fd940190>,\n"," <__main__.neural_layer at 0x7f23fd940b10>,\n"," <__main__.neural_layer at 0x7f23fd940710>,\n"," <__main__.neural_layer at 0x7f23fd9408d0>,\n"," <__main__.neural_layer at 0x7f23fd940750>,\n"," <__main__.neural_layer at 0x7f23fd940150>]"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["topology = [p, 4, 8, 16, 8, 4, 1]\n","\n","neural_net = create_nn(topology, sigm)\n","\n","l2_cost = (lambda Yp, Yr: np.mean((Yp - Yr)**2),\n","           lambda Yp, Yr: (Yp - Yr))\n","\n","def train(neural_net, X, Y, l2_cost, lr=0.5, Train=True):\n","  out=[(None, X)]\n","  #foward pass\n","\n","  for l, layer in enumerate(neural_net):\n","    z = out[-1][1]@neural_net[1].W + neural_net[1].b\n","    a = neural_net[1].act_f[0](z)\n","    out.append((z, a))\n","\n","  print(out[-1][1])\n","\n","train(neural_net, X, Y, l2_cost, 0.5)  \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":329},"id":"u33NPr3b7s8W","executionInfo":{"status":"error","timestamp":1659660314670,"user_tz":300,"elapsed":6,"user":{"displayName":"CAMILO ANDRES LOPEZ SARMIENTO","userId":"14537470450628573491"}},"outputId":"b16fe9ae-10a9-4281-fb61-b3a3c48a3443"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-aa6fabe644a9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     17\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mout\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 19\u001b[0;31m \u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mneural_net\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mY\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ml2_cost\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-7-aa6fabe644a9>\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(neural_net, X, Y, l2_cost, lr, Train)\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m   \u001b[0;32mfor\u001b[0m \u001b[0ml\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlayer\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mneural_net\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m     \u001b[0mz\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mout\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m@\u001b[0m\u001b[0mneural_net\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mW\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mneural_net\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m     \u001b[0ma\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mneural_net\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mact_f\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mz\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0mout\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mz\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0ma\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 4 is different from 2)"]}]}]}